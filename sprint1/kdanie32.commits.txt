5742b970 (Kijan Daniel  2022-10-11 21:57:31 -0400 1) #  CryptMSG

469b2107 (Kijan Daniel  2022-10-11 22:53:20 -0400  34)          block = {'Index': len(self.chain) + 1,
469b2107 (Kijan Daniel  2022-10-11 22:53:20 -0400  35)                          'Timestamp': str(datetime.datetime.now()),
469b2107 (Kijan Daniel  2022-10-11 22:53:20 -0400  36)                          'Proof': proof,
469b2107 (Kijan Daniel  2022-10-11 22:53:20 -0400  37)                          'Previous_hash': previous_hash}

6882aadb (Kijan Daniel  2022-10-11 22:57:15 -0400  19)
6882aadb (Kijan Daniel  2022-10-11 22:57:15 -0400  20)
6882aadb (Kijan Daniel  2022-10-11 22:57:15 -0400  21) class Blockchain:
6882aadb (Kijan Daniel  2022-10-11 22:57:15 -0400  22)
6882aadb (Kijan Daniel  2022-10-11 22:57:15 -0400  23)     # This function is created
6882aadb (Kijan Daniel  2022-10-11 22:57:15 -0400  24)     # to create the very first
6882aadb (Kijan Daniel  2022-10-11 22:57:15 -0400  25)     # block and set its hash to "0"
6882aadb (Kijan Daniel  2022-10-11 22:57:15 -0400  26)     def __init__(self):
6882aadb (Kijan Daniel  2022-10-11 22:57:15 -0400  27)         self.chain = []
6882aadb (Kijan Daniel  2022-10-11 22:57:15 -0400  28)         self.create_block(proof=1, previous_hash='0')
6882aadb (Kijan Daniel  2022-10-11 22:57:15 -0400  29)
6882aadb (Kijan Daniel  2022-10-11 22:57:15 -0400  30)     # This function is created
6882aadb (Kijan Daniel  2022-10-11 22:57:15 -0400  31)     # to add further blocks
6882aadb (Kijan Daniel  2022-10-11 22:57:15 -0400  32)     # into the chain
6882aadb (Kijan Daniel  2022-10-11 22:57:15 -0400  33)     def create_block(self, proof, previous_hash):
6882aadb (Kijan Daniel  2022-10-11 22:57:15 -0400  34)         block = {'index': len(self.chain) + 1,
6882aadb (Kijan Daniel  2022-10-11 22:57:15 -0400  35)                  'timestamp': str(datetime.datetime.now()),
6882aadb (Kijan Daniel  2022-10-11 22:57:15 -0400  36)                  'proof': proof,
6882aadb (Kijan Daniel  2022-10-11 22:57:15 -0400  37)                  'previous_hash': previous_hash}
6882aadb (Kijan Daniel  2022-10-11 22:57:15 -0400  38)         self.chain.append(block)
6882aadb (Kijan Daniel  2022-10-11 22:57:15 -0400  39)         return block
6882aadb (Kijan Daniel  2022-10-11 22:57:15 -0400  40)
6882aadb (Kijan Daniel  2022-10-11 22:57:15 -0400  41)     # This function is created
6882aadb (Kijan Daniel  2022-10-11 22:57:15 -0400  42)     # to display the previous block

1b743f4c (Kijan Daniel 2022-10-11 22:15:34 -0400  1) # Sprint 1
1b743f4c (Kijan Daniel 2022-10-11 22:15:34 -0400  2)
1b743f4c (Kijan Daniel 2022-10-11 22:15:34 -0400  3) Kijan Daniel, KijanDaniel, CryptMSG (include your name, github id, and group name here)
1b743f4c (Kijan Daniel 2022-10-11 22:15:34 -0400  4)
1b743f4c (Kijan Daniel 2022-10-11 22:15:34 -0400  5) ### What you planned to do
1b743f4c (Kijan Daniel 2022-10-11 22:15:34 -0400  6) - Learn Sha256
1b743f4c (Kijan Daniel 2022-10-11 22:15:34 -0400  7) - Write a basic blockchain code
1b743f4c (Kijan Daniel 2022-10-11 22:15:34 -0400  8)
1b743f4c (Kijan Daniel 2022-10-11 22:15:34 -0400  9)
1b743f4c (Kijan Daniel 2022-10-11 22:15:34 -0400 10) ### What you did not do
1b743f4c (Kijan Daniel 2022-10-11 22:15:34 -0400 11) - I have not uploaded the blockchain code, but it will be done latest by Wensday
1b743f4c (Kijan Daniel 2022-10-11 22:15:34 -0400 12)
1b743f4c (Kijan Daniel 2022-10-11 22:15:34 -0400 13) ### What problems you encountered
1b743f4c (Kijan Daniel 2022-10-11 22:15:34 -0400 14) - Figuring out how the blockchain verification works
1b743f4c (Kijan Daniel 2022-10-11 22:15:34 -0400 15)
1b743f4c (Kijan Daniel 2022-10-11 22:15:34 -0400 16) ### Issues you worked on
1b743f4c (Kijan Daniel 2022-10-11 22:15:34 -0400 17) (https://github.com/utk-cs340-fall22/CryptMSG/issues/3) I worked on making the blockchain code
1b743f4c (Kijan Daniel 2022-10-11 22:15:34 -0400 18) (https://github.com/utk-cs340-fall22/CryptMSG/issues/6) I am working on adding info to blockchain and verifying it
1b743f4c (Kijan Daniel 2022-10-11 22:15:34 -0400 19)
1b743f4c (Kijan Daniel 2022-10-11 22:15:34 -0400 20) ### Files you worked on
1b743f4c (Kijan Daniel 2022-10-11 22:15:34 -0400 21) https://github.com/utk-cs340-fall22/CryptMSG/blob/main/blockchain_example.py
1b743f4c (Kijan Daniel 2022-10-11 22:15:34 -0400 22)
1b743f4c (Kijan Daniel 2022-10-11 22:15:34 -0400 23) ### What you accomplished
1b743f4c (Kijan Daniel 2022-10-11 22:15:34 -0400 24) I have almost completed a implementation of a blockchain program to take in information and use sha256 to create hash values for added information on the chain.
1b743f4c (Kijan Daniel 2022-10-11 22:15:34 -0400 25) I am also trying to verify if a chain has been tampered with